====================

basic sorting - bubble / selection / insertion

def bubbleSort(list):
    for i in range(len(list)-1, 0, -1):
        for j in range(i):
            if list[j] > list[j+1]:
                list[j], list[j+1] = list[j+1], list[j]
    return list

def bubbleSort(my_list):
    for i in range(len(my_list)-1, 0, -1):
        for j in range(i):
            if my_list[j] > my_list[j+1]:
                temp = my_list[j]
                my_list[j] = my_list[j+1]
                my_list[j+1] = temp
    return my_list

def selectionSort(list):
    for i in range(len(list)):
        min_index = i
        for j in range(i+1, len(list)):
            if list[j] < list[min_index]:
                min_index = j
        if i != min_index:
            list[i], list[min_index] = list[min_index], list[i]
    return list
-------------
def insertionSort(list):
    for i in range(1, len(list)):
        j = i - 1
        temp = list[i]
        while temp < list[j] and j>-1:
            list[j+1] = list[j]
            list[j] = temp
            j = j-1
    return list
--------------------
def swap(list, index1, index2):
    temp = list[index1]
    list[index1] = list[index2]
    list[index2] = temp

def pivot(list, pivot_index, end_index):
    swap_index = pivot_index
    for i in range(pivot_index+1, end_index+1):
        if list[i] < list[pivot_index]:
            swap_index+=1
            swap(list, swap_index, i)
    swap(list, pivot_index, swap_index)
    return swap_index

def quick_sort_helper(list, left, right):
    if left < right:    
        pivot_index = pivot(list, left, right)
        quick_sort_helper(list, left, pivot_index-1)
        quick_sort_helper(list, pivot_index+1, right)
    return list

def quick_sort(list):
    return quick_sort_helper(list, 0, len(list)-1)
--------------------
1.
sum of three elements in a array should close to the target value

class Solution:
    def sumT(self, list: list[int], target: int) -> int:
        list.sort()
        res = sum(list[:3])
        for i in range(len(list)-2):
            s = i + 1
            e = len(list)-1
            while s < e:
                sumnum = list[i] + list[s] + list[e]
                if abs(sumnum-target) < abs(res-target):
                    res = sumnum
                if sumnum < target:
                    s+=1
                else:
                    e-=1
        return res

list = [-1,  -4, 2, 1, 3]
obj1 = Solution()
print(obj1.sumT(list, 3))

===========================
