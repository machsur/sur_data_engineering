
>> What is AI: development of computer systems/ machines that simulates human intelligence, such as visual perception, speech recognition,
    Self-driving cars, Email Grouping, Recommendation Systems, Play Chess
>> Types of AI:
    Strong AI (General AI): Machine intelligence = Human intelligence
    Narrow AI (Weak AI): Designed for a specific task
>>
  Traditional Programming: Based on Rules - IF this THEN do that
  AI: Full system that mimics human intelligence
  Machine Learning: A subset of AI where machines learn from data. 
  GenAI: An subset of ML that creates new content (Instead of making predictions in ML) - ex: Text Generation, Code Generation, Media Creation
        1. uses Foundation Models - tarined with Complex Process, Huge Volumes of Data, Specialized Hardware
        2. Large Language Models: Text Foundation Models - Trained on huge volumes of diverse text data
        3. Diffusion Models: Turning Noise into Art - great at generating images, audio, and video

>> Foundation Models in GCP: Google AI Studio to Play with Foundation Models.
Gemini: Multimodal capabilities: Understand and generate language, Write and explain code, Create images and videos
Imagen: Trained on: Images + Text descriptions - Specializes in: Text-to-image generation, Image editing from prompts, Understanding image content
Chirp: Trained on Massive multilingual audio datasets - Real-time transcription of meetings, calls, and lectures, Audio translation across languages
Veo: Text-to-Video, Image-to-Video

>> Creating ML models -steps
  1: Data Ingestion   2: Data Preparation   3: Model Training   4: Model Deployment   5: Model Management

>> Data Types
  Structured Data: organized and easily searchable - Employee table - columns for ID, department, salary
  Unstructured Data: Free-form, lacks a predefined format - customer emails describing issues in their own words, User review on a website
  Labeled data: data tagged with meaning (Tags help ML models learn relationships) - Images tagged as “cat” or “dog”, Customer reviews labeled: positive, negative, neutral 
                labelled data used in supervised learning - Learn from past → Predict the future
  Unlabeled data: raw data with no predefined tags (Models must discover patterns without guidance) - customer reviews, A folder of random photos with no captions or tags  
                unlabelled data used in unsupervised or semi-supervised learning - Here’s a mess —> can you make sense of it?”
                reinforcement learning: Try → Fail or Succeed → Learn → Try Again - Child Learn to Walk

>> vertex AI: ML/AI platform in gcp
-- ML in Google Cloud – After Generative AI (Foundation models trained on vast, diverse datasets)
    1. Use Pretrained APIs: Natural Language API, Vision API, Speech-to-Text, etc. - Fastest way to integrate AI into applications — just call the API
    2. Use Foundation Models (as-is via API) - Vertex AI Model Garden: Gemini, or Partner models like Llama
    3. Customize Foundation Models - Vertex AI Model Garden + Fine Tuning: Fine-tune base models using your domain-specific data
    4. Vertex AI AutoML - build from scratch without extensive ML expertise
    5. Vertex AI Custom Models - build from sratch with deep ML expertise - Use frameworks like TensorFlow, PyTorch,..

-- End-to-end MLOps: From data to predictions
    Fully managed infrastructure >> Datasets >> Experiments >> Model Registry >> Model Monitoring

-- Vertex AI Studio - Gen AI Made Easy 
    Model Garden - Prompt Gallery - Tuning 

-- Model vs Agent vs Application
    Model: generates content Example: “Summarize this document”
    Agent: Goal-oriented system that uses models and tools to take action Example: “Send summary to team and schedule a review”
    Application: User-facing interface that embeds one or more agents into a workflow Example: Chatbot for managing leave requests
