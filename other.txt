===================
GIT /

==================

GIT: distributed version control system
local VCS - my machine - i want to collaborate with others - system crashes
centralized VCS - server repo / working copy - copy on server and current version on user machine
distributed VCS - server repo / repository /  working copy 

git --version
git config
git config --global --list
git config --global user.name "surmacha"
git config --global user.email suresh.machavarapu91@gmail.com
git status
git log

==========
git diff / git diff --staged
git rm --cached file.txt

>> clone git repo into local directory
git clone https://alm-github.systems.uk.hsbc/google-cloud-projects/hsbc-9460919-opsanalytics-dev.git

>> 
mkdir git-course
cd git-course
echo "this is suresh" >> READ.md
====================

git init / git init -b main  (to create git local repository)
git add file.txt / git add . : add to git stagging area
git commit -m "my first commit" / git commit -a -m "my first commit" (skip staging dir)

===================
git remote add origin https://alm-github.systems.uk.hsbc/google-cloud-projects/hsbc-9460919-opsanalytics-dev.git 
(one-time to establish connection b/w local git repo and remote github repo)
git push -u origin brnach_name

git remote -v
git log --pretty=oneline
git tag
git show 1.79.0
git tag v1.1 -m "27th june release"
git push origin v1.1

>> work with different branches
git checkout/switch feature1
git checkout -b / switch -c feature1
git branch / --all (for remote too) / - going back branch / -d bn: to delete
git push origin feature1
git merge feature1 (active main branch)
git push origin main

Working directory  ---> .git local repository (stagging area and commit history)---> git remote repository (when collaborate with team)

===============================
